{"version":3,"sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/script.js","webpack://food/./js/services/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,E;AACjB;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;ACzH6B;;;AAGjD;;AAEA;AACA;;;AAGA,oBAAoB;;AAEpB,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,+BAA+B;AAC/B;AACA;;AAEA,uBAAuB;;AAEvB;AACA;;AAEA,kBAAkB;;AAElB;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA,oFAAoF;AACpF;AACA,gCAAgC,SAAS,QAAQ,SAAS;AAC1D,sDAAsD,WAAW;AACjE,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA,8DAA8D,WAAW;AACzE;AACA,kB;AACA,wCAAwC;AACxC;AACA;;AAEA,IAAI,+DAAW;AACf;AACA,2BAA2B,iCAAiC,MAAM;AAClE;AACA,aAAa;AACb,SAAS;AACT;;AAEA,iEAAe,KAAK,E;;;;;;;;;;;;;;;;AC9D0B;AACA;;AAE9C;;AAEA;;AAEA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,KAAK;;AAEL,iCAA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EnD,IAAI,sDAAI;AACR,IAAI,wDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,uDAAK;AACT,IAAI,uDAAK;AACT,IAAI,uDAAK;AACT,IAAI,sDAAI;AACR,IAAI,uDAAK;;AAET,CAAC,E;;;;;;;;;;;;;;;;AC/BD;AACA,sCAAsC;AACtC;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET,gCAAgC;AAChC;;AAEA;AACA;;AAEA;AACA,+CAA+C,IAAI,WAAW,WAAW;AACzE;AACA;AACA;;AAEA,IAAsB;AACtB,I;;;;;;UCvBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"bundle.js","sourcesContent":["function calc() {\r\n    \r\n    // КАЛЬКУЛЯТОР***********\r\n\r\n    const result = document.querySelector('.calculating__result span');\r\n\r\n    // проверяем данные в localStorage, если есть подгружаем, если нет устанавливаем значения переменных\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    // создаем функцию калькулятор\r\n    function calcTotal() {\r\n        if(!sex || !height || !weight || !age || !ratio) { // проверка полей\r\n            result.textContent = '***';\r\n            return;\r\n        }\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n\r\n    // функция по сбору статичных данных значений атрибутов и ID из блоков, удаление активных классов\r\n    /* вешаем обработчик событий на род.элемент click. Из выбранного элемента мы сохраняем либо атрибут data-ratio, если его\r\n        нет, то берем значение ID */\r\n\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n\r\n                // убираем класс активности у всех элементов\r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                }); \r\n                // назначаем активный класс на выбранный элемент\r\n                e.target.classList.add(activeClass);\r\n                calcTotal();\r\n            });\r\n        });\r\n\r\n    }\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    // функция по сбору динамических данных с div calculating__choose_medium\r\n\r\n    function getDynamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n        \r\n        input.addEventListener('input', () => {\r\n            // если значение содержит не цифры\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '2px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n            \r\n            switch(input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n}\r\n\r\nexport default calc;\r\n","import {getResource} from '../services/services';\r\n\r\n\r\nfunction cards() {\r\n\r\n    // классы для карточек (создаем класс с аргументами, присваиваем переменные содержимому карточки, пишем функцию render(создает div вставляет полученные переменные в HTML и помещает \r\n    // в родительский элемент))*****************************\r\n\r\n\r\n    class MenuCard {    // создаем класс для отображения динамической карточки\r\n\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {    //ссылка картинка, алт, название, описание, цена\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector); // родительский DOM элемент, в который будем вставлять div\r\n            this.transfer = 27; // курс для конвертации\r\n            this.changeToUAH();\r\n        }\r\n\r\n        changeToUAH() { // метод конвертации валюты гривны => USD\r\n            \r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        render() {  // создаем элемент, помещаем в него верстку, дополняем данными как арументами помещаем на страницу\r\n\r\n                const element = document.createElement('div');\r\n\r\n                if(this.classes.length === 0) {\r\n                    this.element = 'menu__item';\r\n                    element.classList.add(this.element);\r\n                } else {\r\n                    this.classes.forEach(className => element.classList.add(className));\r\n                }\r\n\r\n                this.classes.forEach(className => element.classList.add(className)); // добавляем классы в div\r\n                element.innerHTML = `\r\n                    <img src= ${this.src} alt= ${this.alt}>\r\n                    <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                    <div class=\"menu__item-descr\">${this.descr}</div>\r\n                    <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                        <div class=\"menu__item-cost\">Цена:</div>\r\n                        <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                    </div>\r\n                `; \r\n            this.parent.append(element); // вставляем в родительский элемент div\r\n        }\r\n    }\r\n\r\n    getResource('http://localhost:3000/menu') // запрашиваем и получаем информацию по menu от db.json\r\n        .then(data => {\r\n            data.forEach(({img, altimg, title, descr, price}) => { // в объекте в свойчтве data лежит ответ от сервера\r\n                new MenuCard(img, altimg, title, descr, price, '.menu__field .container').render();\r\n            });\r\n        });\r\n}\r\n\r\nexport default cards;","import {closeModal, openModal} from './modal';\r\nimport {postData} from '../services/services';\r\n\r\nfunction forms(formSelector, modalTimerId) {\r\n\r\n    // отправка данных с форм \"Перезвонить мне\" на сервер********************\r\n\r\n    const forms = document.querySelectorAll(formSelector);\r\n\r\n    const message = {   // статусы отправки\r\n        loading: 'img/spinner/spinner.svg', // помещаем спиннер\r\n        success: 'Спасибо! Мы с вами свяжемся',\r\n        failure: 'Что-то пошло не так',\r\n    };\r\n    forms.forEach(item => {     // на каждую форму вешаем функцию postData\r\n        bindPostData(item);\r\n    });\r\n\r\n    function bindPostData(form) { // функция для привязки постинга\r\n        form.addEventListener('submit', (e) => {    // обработчик события на нажатие кнопки\r\n            e.preventDefault();                     // отменяем стандартное действие\r\n\r\n            const statusMessage = document.createElement('img'); // создаем элемент на каждую форму \r\n            statusMessage.src = message.loading; // путь к каринке\r\n            // далее используем style.cssText - так как такой метод позволяет задать несколько стилей с удалением существующих\r\n            statusMessage.style.cssText = ` \r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            //form.append(statusMessage); - не будем использовать append так как сьезжает верстка, так как картинка помещается перед </form>\r\n            form.insertAdjacentElement('afterend', statusMessage); // размещаем после элемента </form>\r\n\r\n            const formData = new FormData(form)         // создаем глобальный объект для отправки данных с форм\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));    // преобразуем глобальный объект formData в массив и обратно(fromEntries и entries)\r\n            //Получаем классический объект JS и преобразовываем его в json\r\n\r\n            postData('http://localhost:3000/requests', json)  // отправляем полученный объект на сервер\r\n            .then(data => {   \r\n                console.log(data);\r\n                showThanksModal(message.success);\r\n                statusMessage.remove();\r\n            })\r\n            .catch(() => {   // обрабатываем полученный не успешный результат\r\n                showThanksModal(message.failure);\r\n            })\r\n            .finally(() => { // очищение данных форм выполняется в любом случае\r\n                form.reset();\r\n            })\r\n        });\r\n    }\r\n    \r\n// КРАСИВОЕ ОПОВЕЩЕНИЕ ПОЛЬЗОВАТЕЛЯ ПОСЛЕ ОТПРАВКИ МОДАЛЬНОГО ОКНА***********\r\n\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n        prevModalDialog.classList.add('hide'); // скрываем\r\n        openModal('.modal', modalTimerId);\r\n\r\n        const thanksModal = document.createElement('div');  // создаем модальное окно благодарности\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div data-close class=\"modal__close\">&times;</div>\r\n                <div class=\"modal__title\">${message}</div> \r\n            </div>\r\n        `;\r\n        document.querySelector('.modal').append(thanksModal);   // вставляем созданное окно в .modal\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show'); // показываем\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal('.modal');\r\n        }, 4000);\r\n    }\r\n}\r\n\r\nexport default forms;","function openModal(modalSelector, modalTimerId) { // функция открытия модального окна\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden';    // ставим блокировку overflow в body\r\n    console.log(modalTimerId);\r\n    if (modalTimerId) {\r\n        clearInterval(modalTimerId); \r\n    } \r\n}\r\n\r\nfunction closeModal(modalSelector)   {   // функция на закрытие модального окна\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    document.body.style.overflow = '';          //убираем блокировку overflow\r\n}\r\n\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n\r\n    // модальные окна \"Связаться с нами\" *************************\r\n\r\n    const modalTrigger = document.querySelectorAll(triggerSelector),\r\n          modal = document.querySelector(modalSelector);\r\n         \r\n          //делаем делегирование событий на родительский элемент '[data-close]'\r\n\r\n    modalTrigger.forEach(item => {\r\n        item.addEventListener('click', () => openModal(modalSelector, modalTimerId));\r\n    });\r\n\r\n    modal.addEventListener('click', (e) => {    // выбираем все область modal\r\n        if (e.target === modal || e.target.getAttribute('data-close') == \"\")  {  // если объект события === область модального окна(подложка) || атрибут крестика модального окна\r\n            closeModal(modalSelector);   // вызываем ф-ию закрытия модального окна\r\n        }\r\n    });\r\n\r\n    document.addEventListener('keydown', (e) => {   // закрытие модального окна через \"Escape\" условие, что окно открыто(\"show\")\r\n        if (e.code == 'Escape' && modal.classList.contains('show')) {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n\r\n    function showModalByScroll() { // функция обработчика на скролл страницы\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {  //прокрученная часть + видимая часть >= общая длина документа\r\n            openModal(modalSelector, modalTimerId);    // запускаем окно\r\n            window.removeEventListener('scroll', showModalByScroll);    // удаляем обработчик, чтобы каждый раз не вызывался, а только 1 раз\r\n        }\r\n\r\n    }\r\n    window.addEventListener('scroll', showModalByScroll);   // навешиваем обработчик событий на страницу с запуском функции после скрола\r\n}\r\n\r\nexport default modal;\r\nexport {openModal};\r\nexport {closeModal};","import {getZero} from './timer';\r\n\r\n\r\nfunction slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\r\n\r\n        // СОЗДАНИЕ СЛАЙДЕРА***********\r\n\r\n        const next = document.querySelector(nextArrow), // кнопка\r\n            prev = document.querySelector(prevArrow), // кнопка\r\n            slides = document.querySelectorAll(slide),  // слайды\r\n            slider = document.querySelector(container),    // оболочка всего слайдера\r\n            current = document.querySelector(currentCounter), // номер слайда\r\n            total = document.querySelector(totalCounter),     // всего слайдов\r\n            slidesWrapper = document.querySelector(wrapper),\r\n            slidesField = document.querySelector(field),\r\n            width = window.getComputedStyle(slidesWrapper).width; // вытаскиваем ширину слайда из объекта\r\n\r\n\r\n        let slideIndex = 1;\r\n        let offset = 0;\r\n\r\n\r\n    // устанавливаем ширину блока inner равной кол-ву слайдов (100% текущей ширины на каждый слайд)\r\n        slidesField.style.width = 100 * slides.length + '%';\r\n        slidesField.style.display = 'flex';\r\n        slidesField.style.transition = '0.5s all';\r\n\r\n    // скрываем элементы не попадающие в область видимости\r\n\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n    // задаем каждой картинке (слайду) одинаковую ширину равной ширине окна отображения width\r\n    slides.forEach(slide => slide.style.width = width);\r\n    plusCounter();\r\n\r\n    // функция преобразования offset в число и удаленя 'PX'\r\n\r\n    function deleteNoDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    // прописываем смещение вправо по оси X через transformX\r\n    // width - строка, через регулярку оставляем только числа и пре-ем в число\r\n\r\n    next.addEventListener('click', () => {\r\n\r\n        if (offset == deleteNoDigits(width) * (slides.length - 1)) {    // долистали до конца и возврат слайдера в начало\r\n            offset = 0;\r\n        } else {\r\n            offset += deleteNoDigits(width); // добавялем ширину слайда для смещения\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        opacityShow(dots);\r\n        plusCounter();\r\n\r\n    });\r\n\r\n    // меняем условия местами, так как все работает наоборот\r\n    prev.addEventListener('click', () => {\r\n\r\n        if (offset == 0) {\r\n            offset = deleteNoDigits(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= deleteNoDigits(width); // отнимаем ширину слайда для смещения\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        opacityShow(dots);\r\n        plusCounter();\r\n\r\n    });\r\n\r\n    function plusCounter() {    // номера \r\n        total.innerText = getZero(slides.length);   //всего\r\n        current.innerText = getZero(slideIndex);\r\n    }\r\n\r\n\r\n    // НАВИГАЦИЯ ДЛЯ СЛАЙДОВ***********\r\n\r\n    let dots = [];\r\n    // создаем обертку для точек\r\n    const indicators = document.createElement('ol');\r\n    indicators.classList.add('carousel-indicators');\r\n\r\n    slider.style.position = 'relative';\r\n\r\n    // помещаем созданную обертку indicators в слайдер\r\n    slider.append(indicators);\r\n\r\n    // создаем точки и помещаем в indicators\r\n    // каждой точке назначаем атрибут и класс\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.classList.add('dot');\r\n\r\n            if (i == 0) {\r\n                dot.style.opacity = 1;\r\n            }\r\n\r\n        indicators.append(dot); // пуш в обертку\r\n        dots.push(dot);         // пуш в массив\r\n\r\n    }\r\n\r\n    // фуннкция  изменеия прозрачности индикаторов при листании\r\n    function opacityShow (element) {\r\n\r\n        element.forEach(data => data.style.opacity = '0.5');\r\n        element[slideIndex - 1].style.opacity = '1';\r\n\r\n    }\r\n\r\n    // перемещение слайдов при нажатии на индикаторы\r\n\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = slideTo;\r\n            offset = deleteNoDigits(width) * (slideTo - 1);\r\n\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            opacityShow(dots);\r\n            plusCounter();\r\n        })\r\n    });\r\n}\r\n\r\nexport default slider;","\r\nfunction tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n\r\n    let tabs = document.querySelectorAll(tabsSelector),      // захватываем кладки (табы) \"Тип питания\"\r\n        tabsContent = document.querySelectorAll(tabsContentSelector),          //захватывем контент в каждом табе\r\n        tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n\r\n    function hideTabContent() {     //функция скрытия контента табов   \r\n    tabsContent.forEach(item => {\r\n        item.style.display = 'none';    // скрываем контент ВСЕХ табов из видимости\r\n    });\r\n\r\n    tabs.forEach(item => {\r\n        item.classList.remove(activeClass);    //убираем активность табов (класс активности)\r\n    });\r\n    }\r\n\r\n    function showTabContent(i = 0) {    // показываем контент ОДНОГО таба i = 0 хначение по дефолту\r\n        tabsContent[i].style.display = 'block';\r\n        tabs[i].classList.add(activeClass);    //добавляем активность классу\r\n    }\r\n\r\n    hideTabContent();   //скрываем весб контент\r\n    showTabContent();  //задаем показ 0 слайда по дефолту из табов\r\n\r\n    // вешаем обработчик событий на родительскую область с кнопками tabsParent (лучший способ)\r\n    tabsParent.addEventListener('click', (e) => {\r\n    const target = e.target;    // переменная на объект события\r\n\r\n    if (target && target.classList.contains(tabsSelector.slice(1))) { \r\n        tabs.forEach((item, i) => {\r\n            if(target == item)  {\r\n                hideTabContent();\r\n                showTabContent(i);\r\n                }\r\n            });\r\n        } \r\n    });\r\n}\r\n\r\nexport default tabs;","\r\nfunction getZero(num)   {   // функция преобразует число в строку и ставит \"0\" перед цифрами (0 - 9)\r\n    if (num >= 0 && num < 10) {    // условие подстановки \"0\"\r\n        return `0${num}`;\r\n    } else {\r\n        return num;\r\n    }\r\n}\r\n\r\n\r\nfunction timer(id, deadLine) {\r\n    \r\n    // работа с блоком \"Осталось до конца акции\" - Таймер***********************\r\n\r\n    function getTimeRemaining(endtime)  {   // функция по расчету временных промежутков\r\n        const total = Date.parse(endtime) - Date.parse(new Date()),    // разница в миллисекундах, parse преобразовывает в заданный формат\r\n            days = Math.floor(total / (1000 * 60 * 60 * 24)),        // общее кол-во мс делим на кол-во мс в дне и округляем\r\n            hours = Math.floor((total / (1000 * 60 * 60)) % 24),     // кол-во мс переводим в часы и делим с остатком для получения остатка (кол-ва дней)\r\n            minutes = Math.floor((total / 1000 / 60) % 60),          // получаем остаток минут\r\n            seconds = Math.floor((total / 1000) % 60);               // получаем остаток количества секунд         \r\n            \r\n        return {    //результат функции помещаем а объект\r\n            total,\r\n            days,\r\n            hours,\r\n            minutes,\r\n            seconds\r\n        };\r\n    }\r\n\r\n    function setClock(selector, endtime)    {   // функция для установки времни в элементы страницы\r\n        const timer = document.querySelector(selector), // назначаем переменные для элементов страницы\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            timeInterval = setInterval(updateClock, 1000);    // запуск функции каждую 1 секунду\r\n        \r\n        updateClock();  // запускаем вручную данную функцию, чтобы при обновлении страницы не было паузы в таймере\r\n\r\n        function updateClock()  {               // записываем полученные значения из объекта в элементы HTML\r\n            let t = getTimeRemaining(endtime);\r\n                \r\n            days.innerHTML = getZero(t.days);   //функция подставляет \"0\" перед цифрами до \"9\"\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0)   {\r\n                clearInterval(timeInterval);    // останавливаем setInterval\r\n            }\r\n        } \r\n    }\r\n    setClock(id, deadLine);\r\n}\r\n\r\nexport default timer;\r\nexport {getZero};","\r\nimport calc from './modules/calc';\r\nimport cards from './modules/cards';\r\nimport forms from './modules/forms';\r\nimport modal from './modules/modal';\r\nimport slider from './modules/slider';\r\nimport tabs from './modules/tabs';\r\nimport timer from './modules/timer';\r\nimport {openModal} from './modules/modal';\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 10000);\r\n\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    slider({\r\n        container: '.offer__slider',\r\n        slide: '.offer__slide',\r\n        nextArrow: '.offer__slider-next',\r\n        prevArrow: '.offer__slider-prev',\r\n        totalCounter: '#total',\r\n        currentCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider-inner'\r\n    });\r\n    cards();\r\n    forms('form', modalTimerId);\r\n    modal('[data-modal]', '.modal', modalTimerId);\r\n    calc();\r\n    timer('.timer', '2021-08-29');\r\n\r\n});","\r\n    const postData = async (url, data) => {\r\n        const res = await fetch(url, {  // дожидаемся результата\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: data\r\n        });\r\n\r\n        return await res.json();    // дожидаемся результата\r\n    };\r\n\r\n    async function getResource(url) {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status:${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    export {postData};\r\n    export {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./js/script.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}